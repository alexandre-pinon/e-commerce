- hosts: server
  tasks:
    - name: apt install  # Install packages that we will need in the futures
      apt:
        update_cache: yes
        state: latest
        name: ['vim', 'git', 'tree', 'htop', 'curl', 'emacs', 'net-tools', 'sudo', 'make', 'unzip', 'python3', 'python3-pip', 'lsb-release', 'apt-transport-https', 'ca-certificates', 'wget', 'nodejs', 'npm']
      
    - name: Downloading php8.0 # Download php8.0 package
      get_url:
        url: https://packages.sury.org/php/apt.gpg
        dest: /etc/apt/trusted.gpg.d/php.gpg

    - name: add debian source for php 8.0
      shell: | 
        echo "deb https://packages.sury.org/php/ $(lsb_release -sc) main" |tee /etc/apt/sources.list.d/php.list
        apt update

    - name: install all php dependencies # PHP dependencies
      apt:
        update_cache: yes
        state: latest
        name: ['php8.0', 'php8.0-cli', 'php8.0-fpm', 'php8.0-pdo', 'php8.0-mysql', 'php8.0-zip', 'php8.0-gd', 'php8.0-mbstring', 'php8.0-curl', 'php8.0-xml', 'php8.0-bcmath', 'php8.0-intl', 'libapache2-mod-php8.0', 'libapache2-mod-fcgid']

    - name: install all Front/Back requirements # application dependencies sush as npm, composer
      shell: | 
        php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
        php -r "if (hash_file('sha384', 'composer-setup.php') === '756890a4488ce9024fc62c56153228907f1545c228516cbf63f885e036d37e9a59d27d63f46af1d4d07ee0f76181c7d3') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
        php composer-setup.php --install-dir=bin
        php -r "unlink('composer-setup.php');"
        wget https://get.symfony.com/cli/installer -O - | bash


    - name: install apache2 # Install Apache2 web server 
      apt: 
        update_cache: yes
        state: latest
        name: apache2
      
    - name: give right to php8.0-fpm
      shell: | 
        a2enmod proxy_fcgi setenvif
        a2enconf php8.0-fpm

    - name: enabled mod_rewrite # Give rights to apache
      apache2_module: 
        state: present
        name: rewrite
      notify:
        - restart apache2

    - name: Copy a app  # Copy all the repository 
      copy:
        src: ./
        dest: /var/www/html
        owner: www-data
        group: www-data

    - name: set time php  # Set EU/Paris time zone for PHP
      become: true
      lineinfile:
        path: /etc/php/8.0/cli/php.ini
        regexp: "date.timezone ="
        line: "date.timezome = Europe/Paris"

    #- name: run back # Run back application
      #command: symfony server:start
      #command: php bin/console server:start


    - name: Run Front # Run front application
      shell: | 
        npm install npm@latest -g
        npm install
        npm start
      args:
        chdir: /var/www/html/front/

    - name: Ensure apache is running
      ansible.builtin.service:
        name: httpd
        state: started

  handlers:
    - name: restart apache2
      service: name=apache2 state=restarted